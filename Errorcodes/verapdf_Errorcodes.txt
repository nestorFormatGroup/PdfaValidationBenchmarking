
---
PDF/A-1 validation rules
---

Rule: 1_6.1.2-1
    Requirement: The % character of the file header shall occur at byte offset 0 of the file. The first line of a PDF file is a header identifying the version of the PDF specification to which the file conforms. 
    Error details: File header does not start at byte offset 0 or does not correctly identify the version of the PDF document.   

Rule: 1_6.1.2-2
    Requirement: The file header line shall be immediately followed by a comment consisting of a % character followed by at least four characters, each of whose encoded byte values shall have a decimal value greater than 127. 
    Error details: Binary comment in the file header is missing or does not conform to Rule 1_6.1.2-2.   The presence of encoded character byte values greater than decimal 127 near the beginning of a file is used by various software tools and protocols to classify the file as containing 8-bit binary data that should be preserved during processing.   

Rule: 1_6.1.3-1
    Requirement: The file trailer dictionary shall contain the ID keyword. The file trailer referred to is either the last trailer dictionary in a PDF file, as described in PDF Reference 3.4.4 and 3.4.5, or the first page trailer in a linearized PDF file, as described in PDF Reference F.2. 
    Error details: Missing ID keyword in the document trailer.   Processing systems and documents may contain references to PDF files. Simply storing a file name, however, even in a platform-independent format, does not guarantee that the file can be found. Even if the file still exists and its name has not been changed, different server software applications may identify it in different ways. For example, servers running on DOS platforms must convert all file names to 8 characters and a 3-character extension; different servers may use different strategies for converting longer file names to this format.   External file references can be made more reliable by including a file identifier in the file itself and using it in addition to the normal platform-based file designation. File identifiers are defined by the optional ID entry in a PDF file’s trailer dictionary. The value of this entry is an array of two strings. The first string is a permanent identifier based on the contents of the file at the time it was originally created, and does not change when the file is incrementally updated. The second string is a changing identifier based on the file's contents at the time it was last updated. When a file is first written, both identifiers are set to the same value. If both identifiers match when a file reference is resolved, it is very likely that the correct file has been found; if only the first identifier matches, then a different version of the correct file has been found.    

Rule: 1_6.1.3-2
    Requirement: The keyword Encrypt shall not be used in the trailer dictionary. 
    Error details: Encrypt keyword is present in the trailer dictionary.   The explicit prohibition of the Encrypt keyword has the implicit effect of disallowing encryption and password-protected access permissions.    

Rule: 1_6.1.3-3
    Requirement: No data shall follow the last end-of-file marker except a single optional end-of-line marker. 
    Error details: Data is present after the last end-of-file marker.   The trailer of a PDF file enables an application reading the file to quickly find the cross-reference table and certain special objects. Applications should read a PDF file from its end. The last line of the file contains only the end-of-file marker, %%EOF. Some PDF viewers require only that the %%EOF marker appear somewhere within the last 1024 bytes of the file. But having any data after %%EOF marker introduces risks that the PDF document might not be processed correctly.    

Rule: 1_6.1.3-4
    Requirement: In a linearized PDF, if the ID keyword is present in both the first page trailer dictionary and the last trailer dictionary, the value to both instances of the ID keyword shall be identical. 
    Error details: The Linearized PDF contains both the ID keyword in the last trailer and in the the first page trailer, and these IDs do not match.   A linearized PDF file is one that has been organized in a special way to enable efficient incremental access in a network environment. The file is valid PDF in all respects, and is compatible with all existing viewers and other PDF applications. Enhanced viewer applications can recognize that a PDF file has been linearized and can take advantage of that organization (as well as added "hint" information) to enhance viewing performance.   As a result of this optimization, the ID of the linearized PDF can be fount in two different places: in the last document trailer and in the trailer for the first page, normally located at the beginning of the document. These two IDs shall be identical to avoid any ambiguities in identifying the PDF document by its ID entry.    

Rule: 1_6.1.4-1
    Requirement: In a cross reference subsection header the starting object number and the range shall be separated by a single SPACE character (20h). 
    Error details: Spacings of a subsection header in the cross reference table do not conform to Rule 1_6.1.4-1.   The cross-reference table contains information that permits random access to indirect objects within the file, so that the entire file need not be read to locate any particular object. The table contains a one-line entry for each indirect object, specifying the location of that object within the body of the file.   The cross-reference table is the only part of a PDF file with a fixed format; this permits entries in the table to be accessed randomly. Any variations in this format, including unnecessary SPACE charaters may result in incorrect parsing of the cross-reference table and, thus, errors in reading the PDF document.    

Rule: 1_6.1.4-2
    Requirement: The xref keyword and the cross reference subsection header shall be separated by a single EOL marker. 
    Error details: Spacings after the "xref" keyword in the cross reference table do not conform to Rule 1_6.1.4-2.   As mentioned in Rule 1_6.1.4-1, any variations in cross reference table format may result in incorrect parsing of the cross-reference table and, thus, errors in reading the PDF document.    

Rule: 1_6.1.6-1
    Requirement: Hexadecimal strings shall contain an even number of non-white-space characters. 
    Error details: A hexadecimal string contains odd number of non-white-space characters.   Strings in PDF documents may be written as a literal byte sequence or as a hexadecimal string; the latter is useful for including arbitrary binary data in a PDF file. A hexadecimal string is written as a sequence of hexadecimal digits (0–9 and either A–F or a–f) enclosed within angle brackets (< and >):   `<4E6F762073686D6F7A206B6120706F702E>`   Each pair of hexadecimal digits defines one byte of the string. White-space characters (such as space, tab, carriage return, line feed, and form feed) are ignored. 
    PDF Validation Technical Working Group notes   White-space characters are defined as NULL (00h), TAB (09h), LINE FEED (0Ah), FORM FEED (0Ch), CARRIGE RETURN (0Dh), SPACE (20h). They may appear within hexadecimal strings for formatting purposes:   `<4E6F 7620 7368 6D6F` ` 7A20 6B61 2070 6F70>`    

Rule: 1_6.1.6-2
    Requirement: All non-white-space characters in hexadecimal strings shall be in the range 0 to 9, A to F or a to f. 
    Error details: Hexadecimal string contains non-white-space characters outside the range 0 to 9, A to F or a to f.    

Rule: 1_6.1.7-1
    Requirement: The value of the Length key specified in the stream dictionary shall match the number of bytes in the file following the LINE FEED character after the stream keyword and preceding the EOL marker before the endstream keyword. 
    Error details: Actual length of the stream does not match the value of the Length key in the Stream dictionary.   Every stream dictionary has a Length entry that indicates how many bytes of the PDF file are used for the stream's data. (If the stream has a filter, Length is the number of bytes of encoded data.) In addition, most filters are defined so that the data is self-limiting; that is, they use an encoding scheme in which an explicit end-of-data (EOD) marker delimits the extent of the data. Finally, streams are used to represent many objects from whose attributes a length can be inferred. All of these constraints must be consistent.    

Rule: 1_6.1.7-2
    Requirement: The stream keyword shall be followed either by a CARRIAGE RETURN (0Dh) and LINE FEED (0Ah) character sequence or by a single LINE FEED character. The endstream keyword shall be preceded by an EOL marker. 
    Error details: Spacings of keywords "stream" and "endstream" do not conform to Rule 1_6.1.7-2.   These requirements remove potential ambiguity regarding the ending of stream content.    

Rule: 1_6.1.7-3
    Requirement: A stream object dictionary shall not contain the F, FFilter, or FDecodeParms keys. 
    Error details: A stream object dictionary contains one of the F, FFilter, or FDecodeParms keys.   These keys are used to point to document content external to the file. The explicit prohibition of these keys has the implicit effect of disallowing external content that can create external dependencies and complicate preservation efforts.   

Rule: 1_6.1.8-1
    Requirement: The object number and generation number shall be separated by a single white-space character. The generation number and obj keyword shall be separated by a single white-space character. The object number and endobj keyword shall each be preceded by an EOL marker. The obj and endobj keywords shall each be followed by an EOL marker. 
    Error details: Spacings of object number and generation number or keywords "obj" and "endobj" do not conform to Rule 1_6.1.8-1.   The definition of an indirect object in a PDF file consists of its object number and generation number, followed by the value of the object itself bracketed between the keywords "obj" and "endobj". The requirements of this rule guarantee that the definition of an indirect object can be parsed unambiguously.    

Rule: 1_6.1.10-1
    Requirement: The LZWDecode filter shall not be permitted. 
    Error details: LZW compression is used.   The use of the LZW compression algorithm has been subject to intellectual property constraints.    

Rule: 1_6.1.10-2
    Requirement: The LZWDecode filter shall not be permitted. 
    Error details: LZW compression is used in the inline image.   Inline images are defined directly within the content stream in which it will be painted, rather than as separate objects. The use of LZW compression is also not permitted for such images.    

Rule: 1_6.1.11-1
    Requirement: A file specification dictionary, as defined in PDF 3.10.2, shall not contain the EF key. 
    Error details: A file specification dictionary contains the EF key.   This key is used to encapsulate files containing arbitrary content within a PDF file. The explicit prohibition of EF key has the implicit effect of disallowing embedded files that can create external dependencies and complicate preservation efforts.    

Rule: 1_6.1.11-2
    Requirement: A file's name dictionary, as defined in PDF Reference 3.6.3, shall not contain the EmbeddedFiles key. 
    Error details: The document contains embedded files (EmbeddedFiles key is present in the file's name dictionary).   PDF/A-1 standard does not permit embedded files. This requirement was relaxed in PDF/A-2 to embed other PDF documents conforming to either PDF/A-1 or PDF/A-2, and in PDF/A-3 to allow any embedded files.    

Rule: 1_6.1.12-1
    Requirement: Largest Integer value is 2,147,483,647. Smallest integer value is -2,147,483,648. 
    Error details: Integer value is out of range.    

Rule: 1_6.1.12-2
    Requirement: Absolute real value must be less than or equal to 32767.0. 
    Error details: Real value is out of range.    

Rule: 1_6.1.12-3
    Requirement: Maximum length of a string (in bytes) is 65535. 
    Error details: Maximum length of a String (65535) is exceeded.    

Rule: 1_6.1.12-4
    Requirement: Maximum length of a name (in bytes) is 127. 
    Error details: Maximum length of a Name (127 bytes) is exceeded.    

Rule: 1_6.1.12-5
    Requirement: Maximum capacity of an array (in elements) is 8191. 
    Error details: Maximum capacity of an array (8191) is exceeded.    

Rule: 1_6.1.12-6
    Requirement: Maximum capacity of a dictionary (in entries) is 4095. 
    Error details: Maximum capacity of a dictionary (4095) is exceeded.    

Rule: 1_6.1.12-7
    Requirement: Maximum number of indirect objects in a PDF file is 8,388,607. 
    Error details: Maximum number of indirect objects (8,388,607) in a PDF file is exceeded.    

Rule: 1_6.1.12-8
    Requirement: Maximum depth of graphics state nesting by q and Q operators is 28. 
    Error details: Maximum depth of graphics state nesting (q and Q operators) is exceeded.    

Rule: 1_6.1.12-9
    Requirement: Maximum number of DeviceN components is 8. 
    Error details: Maximum number of DeviceN components (8) is exceeded.    

Rule: 1_6.1.12-1
    Requirement: Maximum value of a CID (character identifier) is 65,535. 
    Error details: Maximum value of a CID (65,535) is exceeded.    

Rule: 1_6.1.13-1
    Requirement: The document catalog dictionary shall not contain a key with the name OCProperties. 
    Error details: The document catalog dictionary contains the OCProperties entry.   The explicit prohibition of the OCProperties key has the implicit effect of disallowing optional content that generates alternative renderings of a document.    

Rule: 1_6.2.2-1
    Requirement: A PDF/A-1 OutputIntent is an OutputIntent dictionary, as defined by PDF Reference 9.10.4, that is included in the file's OutputIntents array and has GTS_PDFA1 as the value of its S key and a valid ICC profile stream as the value its DestOutputProfile key. 
    Error details: The embedded PDF/A Output Intent colour profile is either invalid or does not provide BToA information.   PDF/A standard requires that all colours shall be specified in a device-independent manner, either directly by the use of a device-independent colour space, or indirectly by the use of an OutputIntent.   The BToA information in ICC profiles connects the PDF colour space with the colour space of the output device.   The ICC specification is an evolving standard. The ICCBased color spaces supported in PDF 1.3 are based on ICC specification version 3.3; those in PDF 1.4 are based on the ICC specification ICC.1:1998-09 and its addendum ICC.1A:1999-04. 
    PDF Validation Technical Working Group notes   It is generally accepted in practice that PDF/A-1 documents may use any ICC colour profiles with their internal version number "major.minor", where "major" number is 2 or less. Such output profiles are fully backward compatible with the ICC specification ICC.1A:1999-04, which has internal version number "2.3".    

Rule: 1_6.2.2-2
    Requirement: If a file's OutputIntents array contains more than one entry, then all entries that contain a DestOutputProfile key shall have as the value of that key the same indirect object, which shall be a valid ICC profile stream. 
    Error details: File's OutputIntents array contains several output intent dictionaries with non-matching destination output profiles.   A PDF document may conform to several PDF standarda at the same time, such as PDF/X, PDF/E or PDF/UA. Each of these standards relies on the presense of the OutputIntent color profile and has to identify such profile via a standard-specific subtype entry (S key in the OutputIntent dictionary). For example, the value of this key is "GTS_PDFA1" for the PDF/A standards, and is "GTS_PDFX" for PDF/X standards.   The requirement for all output intent dictionaries to share the same output ICC profile mimimizes risks that a wrong ICC output profile is used for rendering the PDF document.    

Rule: 1_6.2.3-1
    Requirement: All ICCBased colour spaces shall be embedded as ICC profile streams as described in PDF Reference 4.5* 
    Error details: The embedded ICC profile is either invalid or does not satisfy PDF 1.4 requirements.   ICC profiles can be used in PDF documents to identify the source color spaces. Similar to the requirements for the ICC output profile (see Rule 1_6.2.2-1), the embedded ICC input profile shall satisfy a number of additional requements of PDF 1.4 Specification. These requirements cover the device calss of the ICC profile, its connection color space and the version of the ICC standard the input profile is based on.    

Rule: 1_6.2.3-2
    Requirement: DeviceRGB may be used only if the file has a PDF/A-1 OutputIntent that uses an RGB colour space. 
    Error details: DeviceRGB colour space is used without RGB-based output intent ICC profile.   A conforming PDF/A document may use either DeviceRGB or DeviceCMYK colour spaces, but shall not use both. In an uncalibrated colour space is used in a file then that file shall contain an PDF/A-1 OutputIntent specifying the output ICC profile with matching colour space.   When rendering colours specified in a device-dependent colour space a conforming reader shall use file's PDF/A-1 OutputIntent dictionary as the source colour space. This guarantees unambiguous and device-independent representation of all colours used in the conforming PDF/A document.    

Rule: 1_6.2.3-3
    Requirement: DeviceCMYK may be used only if the file has a PDF/A-1 OutputIntent that uses an CMYK colour space. 
    Error details: DeviceCMYK colour space is used without RGB-based output intent ICC profile.   A conforming PDF/A document may use either DeviceRGB or DeviceCMYK colour spaces, but shall not use both. In an uncalibrated colour space is used in a file then that file shall contain an PDF/A-1 OutputIntent specifying the output ICC profile with matching colour space.   When rendering colours specified in a device-dependent colour space a conforming reader shall use file's PDF/A-1 OutputIntent dictionary as the source colour space. This guarantees unambiguous and device-independent representation of all colours used in the conforming PDF/A document.      

Rule: 1_6.2.3-4
    Requirement: If an uncalibrated colour space is used in a file then that file shall contain a PDF/A-1 OutputIntent, as defined in 1_6.2.2. 
    Error details: DeviceGray colour space is used without output intent ICC profile.   When rendering a DeviceGray colour specification in a file whose OutputIntent is an RGB profile, a conforming reader shall convert the DeviceGray colour specification to RGB by the method described in PDF 1.4 Reference 1_6.2.1:   <pre> red = gray green = gray blue = gray </pre>   When rendering a DeviceGray colour specification in a file whose OutputIntent is a CMYK profile, a conforming reader shall convert the DeviceGray colour specification to DeviceCMYK by the method described in PDF 1.4 Reference 1_6.2.2:   <pre> cyan = 0.0 magenta = 0.0 yellow = 0.0 black = 1.0 – gray </pre>    

Rule: 1_6.2.3-5
    Requirement: All ICCBased colour spaces shall be embedded as ICC profile streams as described in PDF Reference 4.5. 
    Error details: The N entry in the ICC profile dictionary is missing or does not match the number of components in the embedded ICC profile.   PDF 1.4 References requires that the number of color components in the color space described by the ICC profile data must match the number of components actually in the ICC profile. As of PDF 1.4, N must be 1, 3, or 4.   A conforming reader shall render ICCBased colour spaces as specified by the ICC specification, and shall not use the Alternate colour space specified in an ICC profile stream dictionary.      

Rule: 1_6.2.4-1
    Requirement: An Image dictionary shall not contain the Alternates key. 
    Error details: Alternates key is present in the Image dictionary.   Alternate images provide a straightforward and backward-compatible way to include multiple versions of an image in a PDF file for different purposes. These variant representations of the image may differ, for example, in resolution or in color space. The primary goal is to reduce the need to maintain separate versions of a PDF document for low-resolution on-screen viewing and highresolution printing. However, this mechanism is prohibited in PDF/A-compliant documents, as it introduces risks of choosing different images for rendering.    

Rule: 1_6.2.4-2
    Requirement: An XObject dictionary (Image or Form) shall not contain the OPI key. 
    Error details: OPI key is present in an XObject dictionary.   The Open Prepress Interface (OPI) is a mechanism, originally developed by Aldus Corporation, for creating low-resolution placeholders, or proxies, for such high-resolution images. The proxy typically consists of a downsampled version of the full-resolution image, to be used for screen display and proofing. Before the document is printed, it passes through a filter known as an OPI server, which replaces the proxies with the original full-resolution images. Similar to Rule 1_6.2.4-1, this mechanism is prohibited in PDF/A-compliant documents, as it introduces risks of unpredictable PDF rendering.    

Rule: 1_6.2.4-3
    Requirement: If an Image dictionary contains the Interpolate key, its value shall be false. 
    Error details: The value of the Interpolate key in the Image dictionary is true.   When the resolution of a source image is significantly lower than that of the output device, each source sample covers many device pixels. This can cause images to appear "jaggy" or "blocky." These visual artifacts can be reduced by applying an image interpolation algorithm during rendering. Instead of painting all pixels covered by a source sample with the same color, image interpolation attempts to produce a smooth transition between adjacent sample values.   However, the interpolation algorithm is implementation-dependent and is not specified by PDF. Image interpolation may not always be performed for some classes of images or on some output devices. Therefore, this mechanism is not permitted in PDF/A-compliant documents.    

Rule: 1_6.2.5-1
    Requirement: A form XObject dictionary shall not contain the Subtype2 key with a value of PS or the PS key. 
    Error details: The form XObject dictionary contains a PS key or Subtype2 key with value PS.   In earlier versions of PDF, a content stream can include PostScript language fragments. These fragments are used only when printing to a PostScript output device; they have no effect either when viewing the document on-screen or when printing to a non-PostScript device. In addition, applications that understand PDF are unlikely to be able to interpret the PostScript fragments. Hence, this capability should be used with extreme caution and only if there is no other way to achieve the same result. Inappropriate use of PostScript XObjects can cause PDF files to print incorrectly.    

Rule: 1_6.2.6-1
    Requirement: A conforming file shall not contain any reference XObjects. 
    Error details: The document contains a reference XObject (Ref key in the form XObject dictionary).   Reference XObjects enable one PDF document to import content from another. The document in which the reference occurs is called the containing document; the one whose content is being imported is the target document. The target document may reside in a file external to the containing document or may be included within it as an embedded file stream.   As this makes the inital PDF document depentent on the presence of external resources, this mechanism is not permitted in PDF/A-compliant documents.    

Rule: 1_6.2.7-1
    Requirement: A conforming file shall not contain any PostScript XObjects. 
    Error details: The document contains a PostScript XObject.   PostScript XObjects contain arbitrary executable PostScript code streams that have the potential to interfere with reliable and predictable rendering. See Rule 1_6.2.5-1 for more detail.    

Rule: 1_6.2.8-1
    Requirement: An ExtGState dictionary shall not contain the TR key. 
    Error details: An ExtGState dictionary contains the TR key.   In PDF, a transfer function adjusts the values of color components to compensate for nonlinear response in an output device and in the human eye. Each component of a device color space (for example, the red component of the DeviceRGB space) is intended to represent the perceived lightness or intensity of that color component in proportion to the component’s numeric value. Many devices do not actually behave this way, however; the purpose of a transfer function is to compensate for the device's actual behavior.   As this may lead in significantly different visual appearance of PDF documents on different devices, the use of transfer functions is not permitted by PDF/A.    

Rule: 1_6.2.8-2
    Requirement: An ExtGState dictionary shall not contain the TR2 key with a value other than Default. 
    Error details: An ExtGState dictionary contains the TR2 key with a value other than Default.   The TR2 key has the same meaning as TR key (see Rule 1_6.2.8-1) except that the value may also be the name or name Default, denoting the transfer function used by deafult by the output device. And this is the only case, permitted in PDF/A-compliant documents.    

Rule: 1_6.2.9-1
    Requirement: Where a rendering intent is specified, its value shall be one of the four values defined in PDF Reference RelativeColorimetric, AbsoluteColorimetric, Perceptual or Saturation. 
    Error details: A rendering intent with non-standard value is used.   Although CIE-based color specifications are theoretically device-independent, they are subject to practical limitations in the color reproduction capabilities of the output device. Such limitations may sometimes require compromises to be made among various properties of a color specification when rendering colors for a given device. Specifying a rendering intent allows a PDF file to set priorities regarding which of these properties to preserve and which to sacrifice.   PDF 1.4 defines four standard rendering intents, which can be specificed directly in the page content stream via the "ri" operator or attached to any image as an extra property. These standard intents have been deliberately chosen to correspond closely to those defined by the International Color Consortium (ICC), an industry organization that has developed standards for device-independent color.   However, that the exact set of rendering intents supported may vary from one output device to another; a particular device may not support all possible intents, or may support additional ones beyond those listed in the table. To guarantee the predictability of PDF rendering results, non-standard rendering intents are not permitted in PDF/A-compliant documents.    

Rule: 1_6.2.10-1
    Requirement: A content stream shall not contain any operators not defined in PDF Reference even if such operators are bracketed by the BX/EX compatibility operators. 
    Error details: A content stream contains an operator not defined in PDF Reference.   Ordinarily, when a viewer application encounters an operator in a content stream that it does not recognize, an error will occur. A pair of compatibility operators, BX and EX, modify this behavior. These operators must occur in pairs and may be nested. They bracket a compatibility section, a portion of a content stream within which unrecognized operators are to be ignored without error. This mechanism enables a PDF document to use operators defined in newer versions of PDF without sacrificing compatibility with older viewers.   However, as the use of undefined operators may still result in error for some PDF processors, their use is not permitted in PDF/A-compliant documents, even if they are bracketed by BX/EX compatibility operators.   In earlier versions of the PDF format a PostScript operator "PS" was defined. As this operator is not defined in PDF Reference its use is implicitly prohibited by PDF/A-1 specification.    

Rule: 1_6.3.2-1
    Requirement: All fonts used in a conforming file shall conform to the font specifications defined in PDF Reference 5.5.    >* Type - name - (Required) The type of PDF object that this dictionary describes; must be Font for a font dictionary. 
    Error details: A Font dictionary has missing or invalid Type entry    

Rule: 1_6.3.2-2
    Requirement: All fonts used in a conforming file shall conform to the font specifications defined in PDF Reference 5.5.    >* Subtype - name - (Required) The type of font; must be "Type1" for Type 1 fonts, "MMType1" for multiple master fonts, "TrueType" for TrueType fonts "Type3" for Type 3 fonts, "Type0" for Type 0 fonts and "CIDFontType0" or "CIDFontType2" for CID fonts. 
    Error details: A Font dictionary has missing or invalid Subtype entry.   The correct value of the Subtype entry in the font dictionary is critical for the text rendering in PDF documents.    

Rule: 1_6.3.2-3
    Requirement: All fonts used in a conforming file shall conform to the font specifications defined in PDF Reference 5.5.    >* BaseFont - name - (Required) The PostScript name of the font. 
    Error details: A BaseFont entry is missing or has invalid type.   For Type 1 fonts, this is usually the value of the FontName entry in the font program. The PostScript name of the font can be used to find the font’s definition in the viewer application or its environment. It is also the name that will be used when printing to a PostScript output device.   For TrueType fonts the value of BaseFont is determined in one of two ways. It is defined as the PostScript name that is an optional entry in the "name" table of the TrueType font itself. In the absence of such an entry in the "name" table, a PostScript name is derived from the name by which the font is known in the host operating system.    

Rule: 1_6.3.2-4
    Requirement: All fonts used in a conforming file shall conform to the font specifications defined in PDF Reference 5.5.    >* FirstChar - integer - (Required except for the standard 14 fonts) The first character code defined in the font's Widths array. 
    Error details: A non-standard simple font dictionary has missing or invalid FirstChar entry.   The PostScript names of 14 Type 1 fonts, known as the standard fonts, are as follows: <pre> Times-Roman      Helvetica             Courier             Symbol Times-Bold       Helvetica-Bold        Courier-Bold        ZapfDingbats Times-Italic     Helvetica-Oblique     Courier-Oblique Times-BoldItalic Helvetica-BoldOblique Courier-BoldOblique </pre> These fonts, or their font metrics and suitable substitution fonts, are guaranteed to be available to any viewer application.    

Rule: 1_6.3.2-5
    Requirement: All fonts used in a conforming file shall conform to the font specifications defined in PDF Reference 5.5.    >* FirstChar - integer - (Required except for the standard 14 fonts) The first character code defined in the font's Widths array. 
    Error details: A non-standard simple font dictionary has missing or invalid LastChar entry.   See also Rule 1_6.3.2-4.    

Rule: 1_6.3.2-6
    Requirement: All fonts used in a conforming file shall conform to the font specifications defined in PDF Reference 5.5.    >* Widths - array - (Required except for the standard 14 fonts; indirect reference preferred) An array of (LastChar - FirstChar + 1) widths. 
    Error details: Widths array is missing or has invalid size.   See also Rule 1_6.3.2-4.    

Rule: 1_6.3.3-1
    Requirement: For any given composite (Type 0) font referenced within a conforming file, the CIDSystemInfo entries of its CIDFont and CMap dictionaries shall be compatible. 
    Error details: Registry and Ordering entries in the CIDFont and CMap dictionaries of a Type 0 font are not compatible.   CIDFont and CMap dictionaries contain a CIDSystemInfo entry specifying the character collection assumed by the CIDFont or by each CIDFont associated with the CMap -- that is, the interpretation of the CID numbers used by the CIDFont. A character collection is uniquely identified by the Registry, Ordering, and Supplement entries in the CIDSystemInfo dictionary. Character collections whose Registry and Ordering values are the same are compatible.   PDF/A-1 standard requires that the Registry and Ordering strings of the CIDSystemInfo dictionaries for that font shall be identical, unless the value of the CMap dictionary UserCMap key is "Identity-H" or "Identity-V".    

Rule: 1_6.3.3-2
    Requirement: For all Type 2 CIDFonts, the CIDFont dictionary shall contain a CIDToGIDMap entry that shall be a stream mapping from CIDs to glyph indices or the name Identity, as described in PDF Reference Table 5.13. 
    Error details: A Type 2 CIDFont dictionary has missing or invalid CIDToGIDMap entry.   For Type 2, the CIDFont program is actually a TrueType font program, which has no native notion of CIDs. In a TrueType font program, glyph descriptions are identified by glyph index values. Glyph indices are internal to the font and are not defined consistently from one font to another. Instead, a TrueType font program contains a "cmap" table that provides mappings directly from character codes to glyph indices for one or more predefined encodings.   If the TrueType font program is embedded, the Type 2 CIDFont dictionary must contain a CIDToGIDMap entry that maps CIDs to the glyph indices for the appropriate glyph descriptions in that font program.      

Rule: 1_6.3.3-3
    Requirement: All CMaps used within a conforming file, except Identity-H and Identity-V, shall be embedded in that file as described in PDF Reference 5.6.4. 
    Error details: A CMap is different from "Identity-H" or "Identity-V" and is not embedded.   A CMap specifies the mapping from character codes to character selectors (CIDs, or character codes) in the associated CIDFont. It serves a function analogous to the Encoding dictionary for a simple font.   A CMap may be specified in two ways: as a name object identifying a predefined CMap, whose definition is known to the viewer application, or as a stream object whose contents are an embedded CMap file.   The "Identity-H" and "Identity-V" CMaps are two predefined CMap names that can be used to refer to characters directly by their CIDs when showing a text string.      

Rule: 1_6.3.3-4
    Requirement: For those CMaps that are embedded, the integer value of the WMode entry in the CMap dictionary shall be identical to the WMode value in the embedded CMap stream. 
    Error details: WMode entry in the embedded CMap and in the CMap dictionary are not identical.   A CMap also specifies the writing mode (horizontal or vertical) for any CIDFont with which the CMap is combined. This determines which metrics are to be used when glyphs are painted from that font.   In case of embedded CMap file, the writing mode is specified in two different places: in the PDF dictionary associated with the embedded CMap, and inside the embedded CMap file itself. To aviod any ambiguities, PDF/A standard requires that values of these two writing modes coincide.    

Rule: 1_6.3.4-1
    Requirement: The font programs for all fonts used within a conforming file shall be embedded within that file, as defined in PDF Reference 5.8, except when the fonts are used exclusively with text rendering mode 3.  
    Error details: The font program is not embedded.   Text rendering mode 3 specifies that glyphs are not stroked, filled or used as a clipping boundary. A font referenced for use solely in this mode is therefore not rendered and is thus exempt from the embedding requirement.      

Rule: 1_6.3.5-1
    Requirement: The font programs for all fonts used within a conforming file shall be embedded within that file, as defined in PDF Reference 5.8, except when the fonts are used exclusively with text rendering mode 3. 
    Error details: Not all glyphs referenced for rendering are present in the embedded font program, which is used with text rendering modes other than 3.   All conforming PDF/A readers shall use the embedded fonts, rather than other locally resident, substituted or simulated fonts, for rendering.   The fonts used exclusively with text rendering mode 3 (invisible) are excempt from this requirement. OCR solutions often use such invisible fonts on top of the original scanned image to enable selection and copying of recognized text.   There is no exemption from the requirements of this rule for the 14 standard Type 1 fonts. See Rule 1_6.3.2-4 for the list of all standard fonts.    

Rule: 1_6.3.5-2
    Requirement: For all Type 1 font subsets referenced within a conforming file, the font descriptor dictionary shall include a CharSet string listing the character names defined in the font subset, as described in PDF Reference Table 5.18. 
    Error details: A Type1 font subset does not define CharSet entry in its Descriptor dictionary.   Font subsets are acceptable by PDF/A as long as the embedded font programs provide glyph definitions for all characters referenced within the file. Embedding the font programs allows any conforming reader to reproduce correctly all glyphs in the manner in which they were originally published without reference to possibly ephemeral external resources.    

Rule: 1_6.3.5-3
    Requirement: For all CIDFont subsets referenced within a conforming file, the font descriptor dictionary shall include a CIDSet stream identifying which CIDs are present in the embedded CIDFont file, as described in PDF Reference Table 5.20. 
    Error details: A CID Font subset does not define CIDSet entry in its Descriptor dictionary.   The CIDSet stream data is organized as a table of bits indexed by CID. The bits should be stored in bytes with the high-order bit first. Each bit corresponds to a CID. The first bit of the first byte corresponds to CID 0, the next bit to CID 1, and so on.   See also Rule 1_6.3.5-2.    

Rule: 1_6.3.6-1
    Requirement: For every font embedded in a conforming file, the glyph width information stored in the Widths entry of the font dictionary and in the embedded font program shall be consistent. 
    Error details: Glyph width information in the embedded font program is not consistent with the Widths entry of the font dictionary.   This requirement is necessary to ensure predictable font rendering, regardless of whether a given reader uses the metrics in the Widths entry or those in the font program.   

Rule: 1_6.3.7-1
    Requirement: All non-symbolic TrueType fonts shall specify MacRomanEncoding or WinAnsiEncoding, either as the value of the Encoding entry in the font dictionary or as the value of the BaseEncoding entry in the dictionary that is the value of the Encoding entry in the font dictionary. If the value of the Encoding entry is a dictionary, it shall not contain a Differences entry. 
    Error details: A non-symbolic TrueType font has an encoding different from MacRomanEncoding or WinAnsiEncoding.   Because some aspects of TrueType glyph selection are dependent on the viewer implementation or the operating system, PDF files that use TrueType fonts should follow certain guidelines to ensure predictable behavior across all viewer applications.   This requirement makes normative the suggested guidelines described in PDF 1.4 Reference 5.5.5.   A Font is called non-symbolc, if its character set is the Adobe standard Latin character set (or a subset of it) and it uses the standard names for those characters. The characters in this character set are given in PDF 1.4 Reference, Section D.1, "Latin Character Set and Encodings."    

Rule: 1_6.3.7-2
    Requirement: All symbolic TrueType fonts shall not specify an Encoding entry in the font dictionary. 
    Error details: A symbolic TrueType font specifies an Encoding entry in its dictionary.   A Font is called symbolic if it contains characters outside the Adobe standard Latin character set. It is marked by special flag in its font descriptor dictionary.    

Rule: 1_6.3.7-3
    Requirement: Font programs' "cmap" tables for all symbolic TrueType fonts shall contain exactly one encoding. 
    Error details: The embedded font program for a symbolic TrueType font contains more than one cmap subtable.   A TrueType font program's built-in encoding maps directly from character codes to glyph descriptions, using an internal data structure called a "cmap" (not to be confused with the CMap from Rules 1_6.3.3-3 and 1_6.3.3-4). A TrueType font program can contain multiple encodings that are intended for use on different platforms (such as Mac OS and Windows).   A Font is called symbolic if it contains characters outside the Adobe standard Latin character set. It is marked by special flag in its font descriptor dictionary. Such fonts may use implementation-specific glyph names and are required by PDF/A-1 standard to have to Encoding entry in its font dictionary (see Rule 1_6.3.7-2). In addition to this, the corresponding embedded TrueType program shall have only one cmap subtable to aviod ambiguities in the mapping from character codes to glyph indices in the embedded font.    

Rule: 1_6.4-1
    Requirement: If an SMask key appears in an ExtGState dictionary, its value shall be None. 
    Error details: An ExtGState contains SMask key with a value other than None.   The SMask key in an ExtGState dictionary defines the soft mask, which specifies the mask shape or mask opacity values to be used in the PDF transparent imaging model.   This provision, along with Rules 1_6.4-2 to 1_6.4-6, prohibits the use of transparency within a conforming PDF/A-1 document.    

Rule: 1_6.4-2
    Requirement: An XObject dictionary shall not contain the SMask key. 
    Error details: An XObject contains an SMask key.   The SMask key in XObject dictionaries specifies a subsidiary image XObject defining a soft-mask image to be used as a source of mask shape or mask opacity values in the PDF transparent imaging model.   This provision, along with Rules 1_6.4-1 and 1_6.4-3 to 1_6.4-6, prohibits the use of transparency within a conforming PDF/A-1 document.    

Rule: 1_6.4-3
    Requirement: A Group object with an S key with a value of Transparency shall not be included in a form XObject.    >* A Group object with an S key with a value of Transparency shall not be included in a page dictionary. 
    Error details: A transparency group is present in a form XObject or page dictionary.   A group XObject is a special type of form XObject that can be used to group graphical elements together as a unit for various purposes. It is distinguished by the presence of the optional Group entry in the form dictionary. The value of this entry is a subsidiary group attributes dictionary describing the properties of the group.   A transparency group XObject is defined as a group whose S (subtype) key has value Transparency. It represents a transparency group for use in the PDF transparent imaging model.   This provision, along with Rules 1_6.4-1, 1_6.4-2, and 1_6.4-4 to 1_6.4-6, prohibits the use of transparency within a conforming PDF/A-1 document.    

Rule: 1_6.4-4
    Requirement: The following keys, if present in an ExtGState object, shall have the values shown: BM - Normal or Compatible. 
    Error details: An ExtGState dictionary contains the BM key (blend mode) with a value other than Normal or Compatible.   The BM key in the ExtGState dictionary specifies the current blend mode to be used in the PDF transparent imaging model.   The "Normal" blend mode selects the source color, ignoring the backdrop and, thus, corresponding to the traditional non-transparent imaging model. An additional standard blend mode, "Compatible", is a vestige of an earlier design and is no longer needed, but is still recognized for the sake of compatibility; its effect is equivalent to that of the "Normal" blend mode.   This provision, along with Rules 1_6.4-1 to 1_6.4-3, 1_6.4-5, and 1_6.4-6, prohibits the use of transparency within a conforming PDF/A-1 document.    

Rule: 1_6.4-5
    Requirement: The following keys, if present in an ExtGState object, shall have the values shown: CA - 1.0. 
    Error details: An ExtGState dictionary contains the CA key (stroke alpha) with a value other than 1.0.   The CA key defines the current stroking alpha constant, specifying the constant shape or constant opacity value to be used for stroking operations in the PDF transparent imaging model.   This provision, along with Rules 1_6.4-1 to 1_6.4-4 and 1_6.4-6, prohibits the use of transparency within a conforming PDF/A-1 document.    

Rule: 1_6.4-6
    Requirement: The following keys, if present in an ExtGState object, shall have the values shown: ca - 1.0. 
    Error details: An ExtGState dictionary contains the ca key (fill alpha) with a value other than 1.0.   The ca key defines the current non-stroking alpha constant, specifying the constant shape or constant opacity value to be used for all non-stroking operations (such as path fill or image drawing) in the PDF transparent imaging model.   This provision, along with Rules 1_6.4-1 to 1_6.4-5, prohibits the use of transparency within a conforming PDF/A-1 document.    

Rule: 1_6.5.2-1
    Requirement: Annotation types not defined in PDF Reference shall not be permitted. Additionally, the FileAttachment, Sound and Movie types shall not be permitted. 
    Error details: Unknown or not permitted annotation type.   An annotation associates an object such as a note, sound, or movie with a location on a page of a PDF document, or provides a means of interacting with the user via the mouse and keyboard. PDF includes a wide variety of standard annotation types, described in detail in PDF 1.4 Reference, 8.4.5, "Annotation Types."   Support for multimedia content is outside the scope of PDF/A-1, and, thus, annotations of type "Sound" and "Movie" are not permitted. Annotations of type "FileAttachment" are also not permitted, as PDF/A-1 does not allow any file attachments.    

Rule: 1_6.5.3-1
    Requirement: An annotation dictionary shall not contain the CA key with a value other than 1.0. 
    Error details: An annotation dictionary contains the CA key with value other than 1.0.   The CA key specifies the constant opacity value to be used in painting the annotation. It shall have the value 1.0 similar to stroking and non-stroking constant alpha in the ExtGState dictionary (see Rules 1_6.4-5 and 1_6.4-6).    

Rule: 1_6.5.3-2
    Requirement: An annotation dictionary shall contain the F key. The F key's Print flag bit shall be set to 1 and its Hidden, Invisible and NoView flag bits shall be set to 0. 
    Error details: Annotation flags are either missing or have forbidden values.   The value of the annotation dictionary's F entry is an unsigned 32-bit integer containing flags specifying various characteristics of the annotation. Bit positions within the flag word are numbered from 1 (low-order) to 32 (high-order).   Flag "Invisible" (bit position 1), if clear, allows to display an unknown annotation using an appearance stream specified by its appearance dictionary, if any.   Flag "Hidden" (bit position 2), if set, specifies to not display or print the annotation or allow it to interact with the user, regardless of its annotation type.   Flag "Print" (bit position 3), if set, specifies to print the annotation when the page is printed.   Flag "NoView" (bit position 6), if set, specifies to not display the annotation on the screen or allow it to interact with the user.   The restrictions on annotation flags prevent the use of annotations that are hidden or that are viewable but not printable.    

Rule: 1_6.5.3-3
    Requirement: An annotation dictionary shall not contain the C array or the IC array unless the colour space of the DestOutputProfile in the PDF/A-1 OutputIntent dictionary, defined in 1_6.2.2, is RGB. 
    Error details: Annotation's color or interior color is used without specifying RGB-based destination output profile.   These provisions ensure that the device colour spaces used in annotations by mechanisms other than an appearance stream are indirectly defined by means of the PDF/A-1 OutputIntent. See also Rule 1_6.2.3-2.   

Rule: 1_6.5.3-4
    Requirement: For all annotation dictionaries containing an AP key, the appearance dictionary that it defines as its value shall contain only the N key. If an annotation dictionary's Subtype key has a value of Widget and its FT key has a value of Btn, the value of the N key shall be an appearance subdictionary; otherwise the value of the N key shall be an appearance stream. 
    Error details: Annotation's appearance dictionary contains entries other than N or the N entry has an invalid type.   An annotation can define as many as three separate appearances. The normal appearance (N key in the appearance dictionary) is used when the annotation is not interacting with the user. This is also the appearance that is used for printing the annotation. The rollover appearance (R key) is used when the user moves the cursor into the annotation's active area without pressing the mouse button. The down appearance (R key) is used when the mouse button is pressed or held down within the annotation's active area.   In accordance with the PDF 1.4 Specification, 8.4.4, a Button form field needs to have multiple appearance states, each one associated with the specific values that the button can take. 
    PDF Validation Technical Working Group notes   Even if a Button form field has only one state, it is still required to have an appearance subdictionary with a single key as its default (and only) state.    

Rule: 1_6.6.1-1
    Requirement: The Launch, Sound, Movie, ResetForm, ImportData and JavaScript actions shall not be permitted. Additionally, the deprecated set-state and no-op actions shall not be permitted. The Hide action shall not be permitted. 
    Error details: Unknown or not permitted action type.   Support for multimedia content is outside the scope of PDF/A-1. The ResetForm action changes the rendered appearance of a form. The ImportData action imports form data from an external file. JavaScript actions permit an arbitrary executable code that has the potential to interfere with reliable and predictable rendering.      

Rule: 1_6.6.1-2
    Requirement: Named actions other than NextPage, PrevPage, FirstPage, and LastPage shall not be permitted. 
    Error details: Unknown named action.   In response to each of the four allowed named actions, conforming interactive readers shall perform the appropriate action described in PDF 1.4 Reference Table 8.45. Viewer applications may support additional, nonstandard named actions, but any document using them will not be portable.    

Rule: 1_6.6.1-3
    Requirement: Interactive form fields shall not perform actions of any type. 
    Error details: Interactive form field contains an action object ('A' key).   Such actions may modify the values of the forms and alter the visual representation of the document.    

Rule: 1_6.6.2-1
    Requirement: A Widget annotation dictionary shall not include an AA entry for an additional-actions dictionary. 
    Error details: A Widget annotation contains an additional-actions dictionary (AA entry).   

Rule: 1_6.6.2-2
    Requirement: A Field dictionary shall not include an AA entry for an additional-actions dictionary. 
    Error details: A Field dictionary contains an additional-actions dictionary (AA entry).   These additional-actions dictionaries define arbitrary JavaScript actions. The explicit prohibition of the AA entry has the implicit effect of disallowing JavaScript actions that can create external dependencies and complicate preservation efforts.    

Rule: 1_6.6.2-3
    Requirement: The document catalog dictionary shall not include an AA entry for an additional-actions dictionary. 
    Error details: The document catalog dictionary contains an additional-actions dictionary (AA entry).   These additional-actions dictionaries define arbitrary JavaScript actions. The explicit prohibition of the AA entry has the implicit effect of disallowing JavaScript actions that can create external dependencies and complicate preservation efforts.   

Rule: 1_6.7.2-1
    Requirement: The document catalog dictionary of a conforming file shall contain the Metadata key. 
    Error details: The document catalog dictionary doesn't contain Metadata key.   Metadata is essential for effective management of a file throughout its life cycle. A file depends on metadata for identification and description, as well as for describing appropriate technical and administrative matters.   Metadata, both for an entire document and for components within a document, can be stored in PDF streams called metadata streams. The contents of a metadata stream is the metadata represented in Extensible Markup Language (XML). The format of the XML representing the metadata is defined as part of a framework called the Extensible Metadata Platform (XMP).   A metadata stream can be attached to a document through the Metadata entry in the document catalog.    

Rule: 1_6.7.2-2
    Requirement: Metadata object stream dictionaries shall not contain the Filter key. 
    Error details: The metadata object stream dictionary contains the Filter key.   The explicit prohibition of the Filter key has the implicit effect of preserving the contents of XMP metadata streams as plain text that is visible to non-PDF aware tools. 
    PDF Validation Technical Working Group notes   All requirements in the PDF/A-1 standard pertaining to XMP metadata address only the document level XMP package (the /Metadata entry in the document Catalog), and font metadata. But the ISO 19005-1 clause 1_6.7.2 "Metadata object stream dictionaries shall not contain the Filter key" explicitly requires all XMP Metadata streams in PDF/A-1 documents to be uncompressed, that is contain no /Filter key.   However, all other non-document Metadata streams may not conform to XMP or even to XML format.   

Rule: 1_6.7.3-1
    Requirement: If [a document information dictionary appears in a document], then all of its entries that have analogous properties in predefined XMP schemas … shall also be embedded in the file in XMP form with equivalent values. 
    Error details: Some of the document information dictionary entries that have analogous properties in predefined XMP schemas are not embedded, or do not have equivalent values, in XMP form.   The explicit requirement for equivalence between the values of document information dictionary entries and their analogous XMP properties has the implicit effect of providing unambiguous interpretation of that property's value.    

Rule: 1_6.7.5-1
    Requirement: The bytes attribute shall not be used in the header of an XMP packet. 
    Error details: The XMP Package contains bytes attribute.   Both the bytes and encoding attributes are deprecated in XMP Specification.    

Rule: 1_6.7.5-2
    Requirement: The encoding attribute shall not be used in the header of an XMP packet. 
    Error details: The XMP Package contains encoding attribute.   Both the bytes and encoding attributes are deprecated in XMP Specification.    

Rule: 1_6.7.8-1
    Requirement: [Extension schema] descriptions shall be specified using the PDF/A extension schema container schema defined in this clause. 
    Error details: An extension schema object contains fields not defined by the specification.   An extension schema is any XMP schema that is not defined in the XMP Specification. All objects of the extension schemas and their fields are specified in ISO 19005-1:2005, 1_6.7.8 and its technical corrigenda.    

Rule: 1_6.7.8-2
    Requirement: The extension schema container schema … uses the namespace URI "http://www.aiim.org/pdfa/ns/extension/". The required schema namespace prefix is pdfaExtension. [The container schema includes the following property: pdfaExtension:schemas (Bag).]* 
    Error details: Invalid syntax of the extension schema container.   Extension schema container stores a sequence of extension schemas defined in the XMP package.      

Rule: 1_6.7.8-3
    Requirement: The Schema type … is an XMP structure containing the definition of an extension schema. The field namespace URI is "http://www.aiim.org/pdfa/ns/schema". The required field namespace prefix is pdfaSchema. [The Schema type includes the following fields: pdfaSchema:schema (Text), pdfaSchema:namespaceURI (URI), pdfaSchema:prefix (Text), pdfaSchema:property (Seq Property), pdfaSchema:valueType (Seq ValueType).]*  
    Error details: Invalid Extension Schema definition.    

Rule: 1_6.7.8-4
    Requirement: The Property type … is an XMP structure containing the description of a schema property. The field namespace URI is "http://www.aiim.org/pdfa/ns/property". The required field namespace prefix is pdfaProperty. [The Property type includes the following fields: pdfaProperty:name (Text), pdfaProperty:valueType (Open Choice of Text), pdfaProperty:category (Closed Choice of Text), pdfaProperty:description (Text).]* 
    Error details: Invalid Property type definition in an extension schema.    

Rule: 1_6.7.8-5
    Requirement: The ValueType type … is an XMP structure containing the definition of all property value types used by embedded extension schemas that are not defined in XMP Specification. The field namespace URI is "http://www.aiim.org/pdfa/ns/type". The required field namespace prefix is pdfaType. [The ValueType type includes the following fields: pdfaType:type (Text), pdfaType:namespaceURI (URI), pdfaType:prefix (Text), pdfaType:description (Text), pdfaType:field (Seq Field).]* 
    Error details: Invalid ValueType type definition in an extension schema.    

Rule: 1_6.7.8-6
    Requirement: The Field type … is an XMP structure containing the definition of a property value type field. The field namespace URI is "http://www.aiim.org/pdfa/ns/field". The required field namespace prefix is pdfaField. [The Field type contains the following fields: pdfaField:name (Text), pdfaField:valueType (Open Choice of Text), pdfaField:description (Text).]* 
    Error details: Invalid Field type definition in an extension schema.    

Rule: 1_6.7.9-1
    Requirement: The metadata stream shall conform to XMP Specification and well formed PDFAExtension Schema for all extensions. 
    Error details: The serialization of the metadata stream does not conform to XMP Specification.      

Rule: 1_6.7.9-2
    Requirement: Properties specified in XMP form shall use either the predefined schemas defined in XMP Specification, or extension schemas that comply with XMP Specification. 
    Error details: A property is either not defined in XMP Specification, or is not defined in any of the extension schemas, or has an invalid value type.    

Rule: 1_6.7.11-1
    Requirement: The PDF/A version and conformance level of a file shall be specified using the PDF/A Identification extension schema. 
    Error details: The document metadata stream does not contain a PDF/A Identification Schema.    

Rule: 1_6.7.11-2
    Requirement: The value of pdfaid:part shall be the part number of ISO 19005 to which the file conforms. 
    Error details: The "part" property of the PDF/A Identification Schema is not equal to 1 for a PDF/A-1 conforming file.    

Rule: 1_6.7.11-3
    Requirement: A Level A conforming file shall specify the value of pdfaid:conformance as A. A Level B conforming file shall specify the value of pdfaid:conformance as B. 
    Error details: The "conformance" property of the PDF/A Identification Schema is not equal to "A" for a PDF/A-1a conforming file.   The "conformance" property of the PDF/A Identification Schema is not equal to "A" or "B" for a PDF/A-1b conforming file.   As Level B requirements form a strict subset of Level A requirements, validation for Level B conformance also accepts the "conformance" property having a value of "A".    

Rule: 1_6.7.11-4
    Requirement: The [PDF/A] Identification schema … uses the namespace URI "http://www.aiim.org/pdfa/ns/id/". The required schema namespace prefix is pdfaid. [The Identification schema contains the following properties: pdfaid:part (Open Choice of Integer), pdfaid:amd (Open Choice of Text), pdfaid:conformance (Open Choice of Text).]* 
    Error details: A property of the PDF/A Identification Schema has an invalid namespace prefix.    

Rule: 1_6.8.2-1
    Requirement: The document catalog dictionary shall include a MarkInfo dictionary whose sole entry, Marked, shall have a value of true. 
    Error details: Marked entry of the MarkInfo dictionary is not present in the document catalog or is set to false.   This setting indicates that the file conforms to the Tagged PDF conventions.    

Rule: 1_6.8.3-1
    Requirement: The logical structure of the conforming file shall be described by a structure hierarchy rooted in the StructTreeRoot entry of the document catalog dictionary, as described in PDF Reference 9.6. 
    Error details: StructTreeRoot entry is not present in the document catalog.   The logical structure of a document is described by a hierarchy of objects called the structure hierarchy or structure tree. At the root of the hierarchy is a dictionary object called the structure tree root, located via the StructTreeRoot entry in the document catalog.    

Rule: 1_6.8.3-2
    Requirement: All non-standard structure types shall be mapped to the nearest functionally equivalent standard type, as defined in PDF Reference 9.7.4, in the role map dictionary of the structure tree root. 
    Error details: Non-standard structure type is not mapped to a standard type.    

Rule: 1_6.9-1
    Requirement: The NeedAppearances flag of the interactive form dictionary shall either not be present or shall be false. 
    Error details: The interactive form dictionary contains the NeedAppearances flag with value true.   This flag specifies whether to construct appearance streams and appearance dictionaries for all widget annotations in the document.   Every form field shall have an appearance dictionary associated with the field's data. A conforming reader shall render the field according to the appearance dictionary without regard to the form data. Requiring an appearance dictionary ensures the reliable rendering of the form.    

Rule: 1_6.9-2
    Requirement: A Widget annotation dictionary … shall not contain the A or AA keys. 
    Error details: A Widget annotation contains either the A or AA entry.   These entries define arbitrary JavaScript actions that can alter values of interactive forms and their visual appearance.    

Rule: 1_6.9-3
    Requirement: [A] Field dictionary shall not contain the A or AA keys. 
    Error details: A Form field dictionary contains the AA entry.   This entry define arbitrary JavaScript actions that can alter values of interactive forms and their visual appearance.    

Rule: 1_6.9-4
    Requirement: Every form field shall have an appearance dictionary associated with the field's data. 
    Error details: A form field does not have an appearance dictionary associated with the field's data.   A conforming reader shall render the field according to the appearance dictionary without regard to the form data. Requiring an appearance dictionary ensures the reliable rendering of the form.   Interactive forms use widget annotations to represent the appearance of fields and to manage user interactions.


--- 
PDF/A-2 and PDF/A-3 validation rules 
---   

Rule: 2_6.1.2-1
    Requirement: The file header shall begin at byte zero and shall consist of "%PDF-1.n" followed by a single EOL marker, where 'n' is a single digit number between 0 (30h) and 7 (37h)* 
    Error details: File header does not start at byte offset 0 or does not conform to Rule 2_6.1.2-1.    

Rule: 2_6.1.2-2
    Requirement: The aforementioned EOL marker shall be immediately followed by a % (25h) character followed by at least four bytes, each of whose encoded byte values shall have a decimal value greater than 127.  
    Error details: Binary comment in the file header is missing or does not conform to Rule 2_6.1.2-2.   The presence of encoded character byte values greater than decimal 127 near the beginning of a file is used by various software tools and protocols to classify the file as containing 8-bit binary data that should be preserved during processing.      

Rule: 2_6.1.3-1
    Requirement: The file trailer dictionary shall contain the ID keyword whose value shall be File Identifiers as defined in ISO 32000-1:2008, 14.4* 
    Error details: Missing ID in the document trailer.   Processing systems and documents may contain references to PDF files. Simply storing a file name, however, even in a platform-independent format, does not guarantee that the file can be found. Even if the file still exists and its name has not been changed, different server software applications may identify it in different ways. For example, servers running on DOS platforms must convert all file names to 8 characters and a 3-character extension; different servers may use different strategies for converting longer file names to this format.   External file referencescan be made more reliable by including a file identifier in the file itself and using it in addition to the normal platform-based file designation. File identifiers are defined by the optional ID entry in a PDF file’s trailer dictionary. The value of this entry is an array of two strings. The first string is a permanent identifier based on the contents of the file at the time it was originally created, and does not change when the file is incrementally updated. The second string is a changing identifier based on the file's contents at the time it was last updated. When a file is first written, both identifiers are set to the same value. If both identifiers match when a file reference is resolved, it is very likely that the correct file has been found; if only the first identifier matches, then a different version of the correct file has been found.      

Rule: 2_6.1.3-2
    Requirement: The keyword Encrypt shall not be used in the trailer dictionary. 
    Error details: Encrypt keyword is present in the trailer dictionary.   The explicit prohibition of the Encrypt keyword has the implicit effect of disallowing encryption and password-protected access permissions.    

Rule: 2_6.1.3-3
    Requirement: No data can follow the last end-of-file marker except a single optional end-of-line marker as described in ISO 32000-1:2008, 7.5.5. 
    Error details: Data is present after the last end-of-file marker.   The trailer of a PDF file enables an application reading the file to quickly find the cross-reference table and certain special objects. Applications should read a PDF file from its end. The last line of the file contains only the end-of-file marker, %%EOF. Some PDF viewers require only that the %%EOF marker appear somewhere within the last 1024 bytes of the file. But having any data after %%EOF marker introduces risks that the PDF document might not be processed correctly.      

Rule: 2_6.1.4-2
    Requirement: The xref keyword and the cross-reference subsection header shall be separated by a single EOL marker. 
    Error details: Spacings after the 'xref' keyword in the cross reference table do conform to Rule 2_6.1.4-2.   The cross-reference table contains information that permits random access to indirect objects within the file, so that the entire file need not be read to locate any particular object. The table contains a one-line entry for each indirect object, specifying the location of that object within the body of the file.   The cross-reference table is the only part of a PDF file with a fixed format; this permits entries in the table to be accessed randomly. Any variations in this format, including unnecessary EOL markers may result in incorrect parsing of the cross-reference table and, thus, errors in reading the PDF document.    

Rule: 2_6.1.6-1
    Requirement: Hexadecimal strings shall contain an even number of non-white-space characters.  
    Error details: A hexadecimal string contains odd number of non-white-space characters.   Strings in PDF documents may be written as a literal byte sequence or as a hexadecimal string; the latter is useful for including arbitrary binary data in a PDF file. A hexadecimal string is written as a sequence of hexadecimal digits (0–9 and either A–F or a–f) enclosed within angle brackets (< and >):   `<4E6F762073686D6F7A206B6120706F702E>`   Each pair of hexadecimal digits defines one byte of the string. White-space characters (such as space, tab, carriage return, line feed, and form feed) are ignored. 
    veraPDF Technical Workgroup Notes   White-space characters are defined as NULL (00h), TAB (09h), LINE FEED (0Ah), FORM FEED (0Ch), CARRIGE RETURN (0Dh), SPACE (20h). They may appear within hexadecimal strings for formatting purposes:   `<4E6F 7620 7368 6D6F` ` 7A20 6B61 2070 6F70>`    

Rule: 2_6.1.6-2
    Requirement: A hexadecimal string is written as a sequence of hexadecimal digits (0-9 and either A-F or a-f).  
    Error details: Hexadecimal string contains non-white-space characters outside the range 0 to 9, A to F or a to f.    

Rule: 2_6.1.7-1
    Requirement: The value of the Length key specified in the stream dictionary shall match the number of bytes in the file following the LINE FEED (0Ah) character after the stream keyword and preceding the EOL marker before the endstream keyword.  
    Error details: Actual length of the stream does not match the value of the Length key in the Stream dictionary.   Every stream dictionary has a Length entry that indicates how many bytes of the PDF file are used for the stream's data. (If the stream has a filter, Length is the number of bytes of encoded data.) In addition, most filters are defined so that the data is self-limiting; that is, they use an encoding scheme in which an explicit end-of-data (EOD) marker delimits the extent of the data. Finally, streams are used to represent many objects from whose attributes a length can be inferred. All of these constraints must be consistent.    

Rule: 2_6.1.7-2
    Requirement: The stream keyword shall be followed either by a CARRIAGE RETURN (0Dh) and LINE FEED (0Ah) character sequence or by a single LINE FEED (0Ah) character. The endstream keyword shall be preceded by an EOL marker.  
    Error details: Spacings of keywords 'stream' and 'endstream' do not conform to Rule 2_6.1.7-2.   These requirements remove potential ambiguity regarding the ending of stream content.    

Rule: 2_6.1.7-3
    Requirement: A stream dictionary shall not contain the F, FFilter, or FDecodeParams keys. 
    Error details: A stream object dictionary contains one of the F, FFilter, or FDecodeParms keys.   These keys are used to point to document content external to the file. The explicit prohibition of these keys has the implicit effect of disallowing external content that can create external dependencies and complicate preservation efforts.    

Rule: 2_6.1.7-4
    Requirement: All standard stream filters listed in ISO 32000-1:2008, 7.4, Table 6 may be used, with the exception of LZWDecode. In addition, the Crypt filter shall not be used unless the value of the Name key in the decode parameters dictionary is Identity. Filters that are not listed in ISO 32000-1:2008, 7.4, Table 6 shall not be used. 
    Error details: The stream compression uses a filter not compiant to Rule 2_6.1.7-4.   The use of the LZW compression algorithm has been subject to intellectual property constraints. The Crypt filter is used to apply encryption and access control to the file.    

Rule: 2_6.1.8-1
    Requirement: Font names, names of colourants in Separation and DeviceN colour spaces, and structure type names, after expansion of character sequences escaped with a NUMBER SIGN (23h), if any, shall be valid UTF-8 character sequences.  
    Error details: The name object does not represent a correct Utf8 byte sequence.   As stated above, name objects shall be treated as atomic within a PDF file. Ordinarily, the bytes making up the name are never treated as text to be presented to a human user or to an application external to a conforming reader. However, occasionally the need arises to treat a name object as text, such as one that represents a font name, a colorant name in a separation or DeviceN colour space, or a structure type.   In such situations, the sequence of bytes (after expansion of NUMBER SIGN sequences, if any) should be interpreted according to UTF-8, a variable-length byte-encoded representation of Unicode in which the printable ASCII characters have the same representations as in ASCII. This enables a name object to represent text virtually in any natural language, subject to the implementation limit on the length of a name.      

Rule: 2_6.1.9-1
    Requirement: The object number and generation number shall be separated by a single white-space character. The generation number and obj keyword shall be separated by a single white-space character. The object number and endobj keyword shall each be preceded by an EOL marker. The obj and endobj keywords shall each be followed by an EOL marker.  
    Error details: Spacings of object number and generation number or keywords 'obj' and 'endobj' do not conform to Rule 2_6.1.9-1.   The definition of an indirect object in a PDF file consists of its object number and generation number, followed by the value of the object itself bracketed between the keywords "obj" and "endobj". The requirements of this rule guarantee that the definition of an indirect object can be parsed unambiguously.    

Rule: 2_6.1.10-1
    Requirement: The value of the F key in the Inline Image dictionary shall not be LZW, LZWDecode, Crypt, a value not listed in ISO 32000-1:2008, Table 6, or an array containing any such value.  
    Error details: An inline image uses LZW, Crypt or one of the unknown filters.   Inline images are defined directly within the content stream in which it will be painted, rather than as separate objects. The use of LZW, Crypt and other non-standard compression imethods is also not permitted for such images.    

Rule: 2_6.1.12-1
    Requirement: No keys other than UR3 and DocMDP shall be present in a permissions dictionary (ISO 32000-1:2008, 12.8.4, Table 258).  
    Error details: The document permissions dictionary contains keys other than UR3 and DocMDP.   

Rule: 2_6.1.12-2
    Requirement: If DocMDP is present, then the Signature References dictionary (ISO 32000-1:2008, 12.8.1, Table 253) shall not contain the keys DigestLocation, DigestMethod, and DigestValue.  
    Error details: The Signature References dictionary contains one of the keys DigestLocation, DigestMethod, or DigestValue in presence of DocMDP entry in the permissions dictionary.   These restrictions are present to ensure that functionality such as obsolete versions of the "User Rights" dictionary do not appear in a document conforming to ISO 19005-2 and ISO 19005-3.      

Rule: 2_6.1.13-1
    Requirement: A conforming file shall not contain any integer greater than 2147483647. A conforming file shall not contain any integer less than -2147483648. 
    Error details: Integer value is out of range.    

Rule: 2_6.1.13-2
    Requirement: A conforming file shall not contain any real number outside the range of +/-3.403 x 10^38. 
    Error details: Real value is out of range.    

Rule: 2_6.1.13-3
    Requirement: A conforming file shall not contain any string longer than 32767 bytes. 
    Error details: Maximum length of a String (32767) is exceeded.    

Rule: 2_6.1.13-4
    Requirement: A conforming file shall not contain any name longer than 127 bytes. 
    Error details: Maximum length of a Name (127) is exceeded.    

Rule: 2_6.1.13-5
    Requirement: A conforming file shall not contain any real number closer to zero than +/-1.175 x 10^(-38). 
    Error details: Non-zero real value is too close to 0.0.    

Rule: 2_6.1.13-7
    Requirement: A conforming file shall not contain more than 8388607 indirect objects. 
    Error details: Maximum number of indirect objects (8,388,607) in a PDF file is exceeded.    

Rule: 2_6.1.13-8
    Requirement: A conforming file shall not nest q/Q pairs by more than 28 nesting levels.  
    Error details: Maximum depth of graphics state nesting (q and Q operators) is exceeded.    

Rule: 2_6.1.13-9
    Requirement: A conforming file shall not contain a DeviceN colour space with more than 32 colourants. 
    Error details: Maximum number of DeviceN components (32) is exceeded    

Rule: 2_6.1.13-1
    Requirement: A conforming file shall not contain a CID value greater than 65535. 
    Error details: Maximum value of a CID (65535) is exceeded.    

Rule: 2_6.1.13-11
    Requirement: The size of any of the page boundaries described in ISO 32000-1:2008, 14.11.2 shall not be less than 3 units in either direction, nor shall it be greater than 14 400 units in either direction. 
    Error details: One of the page boundaries is out of range (3-14400) in one of the directions.    

Rule: 2_6.2.2-1
    Requirement: Content streams shall not contain any operators not defined in ISO 32000-1 even if such operators are bracketed by the BX/EX compatibility operators. 
    Error details: A content stream contains an operator not defined in ISO 32000-1.    

Rule: 2_6.2.2-2
    Requirement: A content stream that references other objects, such as images and fonts that are necessary to fully render or process the stream, shall have an explicitly associated Resources dictionary as described in ISO 32000-1:2008, 7.8.3.  
    Error details: A content stream references a named resource that is not defined in an explicitly associated Resources dictionary.    

Rule: 2_6.2.3-1
    Requirement: The profile stream that is the value of the DestOutputProfile key shall either be an output profile (Device Class = "prtr") or a monitor profile (Device Class = "mntr"). The profiles shall have a colour space of either "GRAY", "RGB", or "CMYK".  
    Error details: The embedded PDF/A Output Intent colour profile has invalid header      

Rule: 2_6.2.3-2
    Requirement: If a file's OutputIntents array contains more than one entry, as might be the case where a file is compliant with this part of ISO 19005 and at the same time with PDF/X-4 or PDF/E-1, then all entries that contain a
    Error details: File's OutputIntents array contains output intent dictionaries with non-matching destination output profiles.    

Rule: 2_6.2.3-3
    Requirement: The DestOutputProfileRef key, as defined in ISO 15930-7:2010, Annex A, shall not be present in any PDF/X OutputIntent.  
    Error details: The output intent dictionary contains entry DestOutputProfileRef, which is not permitted by PDF/A-2 and PDF/A-3 specifications.      

Rule: 2_6.2.4.2-1
    Requirement: The profile that forms the stream of an ICCBased colour space shall conform to ICC.1:1998-09, ICC.1:2001-12, ICC.1:2003-09 or ISO 15076-1. 
    Error details: The embedded ICC profile is either invalid or does not satisfy PDF 1.7 requirements.      

Rule: 2_6.2.4.2-2
    Requirement: Overprint mode (as set by the OPM value in an ExtGState dictionary) shall not be one (1) when an ICCBased CMYK colour space is used and when overprinting for stroke or fill or both is set to true. 
    Error details: Overprint mode (OPM) is set to 1 when an ICCBased CMYK colour space is used with enabled overprinting.   This prohibition avoids unpredictable overprinting behaviour when overprint mode is 1 if implicit colour conversion is applied as described in ISO 32000-1:2008, 8.6.7.      

Rule: 2_6.2.4.3-2
    Requirement: DeviceRGB shall only be used if a device independent DefaultRGB colour space has been set when the DeviceRGB colour space is used, 
    Error details: DeviceRGB colour space is used without RGB output intent profile    

Rule: 2_6.2.4.3-3
    Requirement: DeviceCMYK shall only be used if a device independent DefaultCMYK colour space has been set or if a DeviceN-based DefaultCMYK colour space has been set when the DeviceCMYK colour space is used or the file has a PDF/A OutputIntent that contains a CMYK destination profile.  
    Error details: DeviceCMYK colour space is used without CMYK output intent profile    

Rule: 2_6.2.4.3-4
    Requirement: DeviceGray shall only be used if a device independent DefaultGray colour space has been set when the DeviceGray colour space is used, or if a PDF/A OutputIntent is present. 
    Error details: DeviceGray colour space is used without an ICC output intent profile.    

Rule: 2_6.2.4.4-1
    Requirement: For any spot colour used in a DeviceN or NChannel colour space, an entry in the Colorants dictionary shall be present. 
    Error details: A colorant of the DeviceN color space is not defined in the Colorants dictionary      

Rule: 2_6.2.4.4-2
    Requirement: All Separation arrays within a single PDF/A-2 file (including those in Colorants dictionaries) that have the same name shall have the same tintTransform and alternateSpace. In evaluating equivalence, the PDF objects shall be compared, rather than the computational result of the use of those PDF objects. Compression and whether or not an object is direct or indirect shall be ignored.  
    Error details: Several occurrances of a Separation colour space with the same name are not consistent    

Rule: 2_6.2.5-1
    Requirement: An ExtGState dictionary shall not contain the TR key. 
    Error details: An ExtGState dictionary contains the TR key.    

Rule: 2_6.2.5-2
    Requirement: An ExtGState dictionary shall not contain the TR2 key with a value other than Default. 
    Error details: An ExtGState dictionary contains the TR2 key with a value other than Default.    

Rule: 2_6.2.5-3
    Requirement: An ExtGState dictionary shall not contain the HTP key. 
    Error details: An ExtGState dictionary contains the HTP key.    

Rule: 2_6.2.5-4
    Requirement: All halftones in a conforming PDF/A-2 file shall have the value 1 or 5 for the HalftoneType key. 
    Error details: A Halftone has type other than 1 or 5    

Rule: 2_6.2.5-5
    Requirement: Halftones in a conforming PDF/A-2 file shall not contain a HalftoneName key. 
    Error details: A Halftone dictionary contains the HalftoneName key    

Rule: 2_6.2.6-1
    Requirement: Where a rendering intent is specified, its value shall be one of the four values defined in ISO 32000-1:2008, Table 70: RelativeColorimetric, AbsoluteColorimetric, Perceptual or Saturation. 
    Error details: A rendering intent with non-standard value is used    

Rule: 2_6.2.8-1
    Requirement: An Image dictionary shall not contain the Alternates key. 
    Error details: Alternates key is present in the Image dictionary.    

Rule: 2_6.2.8-2
    Requirement: An Image dictionary shall not contain the OPI key. 
    Error details: OPI key is present in the XObject dictionary.    

Rule: 2_6.2.8-3
    Requirement: If an Image dictionary contains the Interpolate key, its value shall be false. For an inline image, the I key shall have a value of false.  
    Error details: The value of the Interpolate key in the Image dictionary is true    

Rule: 2_6.2.8.3-1
    Requirement: The number of colour channels in the JPEG2000 data shall be 1, 3 or 4. 
    Error details: JPEG2000 image has number of colour channels different from 1, 3 or 4.    

Rule: 2_6.2.8.3-2
    Requirement: If the number of colour space specifications in the JPEG2000 data is greater than 1, there shall be exactly one colour space specification that has the value 0x01 in the APPROX field. 
    Error details: The JPEG2000 image contains more than one colour specification with the best colour fidelity (value 0x01 in the APPROX field).    

Rule: 2_6.2.8.3-3
    Requirement: The value of the METH entry in its 'colr' box shall be 0x01, 0x02 or 0x03. A conforming reader shall use only that colour space and shall ignore all other colour space specifications. 
    Error details: Colour specification of the JPEG2000 image has invalid specification method.    

Rule: 2_6.2.8.3-4
    Requirement: JPEG2000 enumerated colour space 19 (CIEJab) shall not be used. 
    Error details: JPEG2000 image uses enumerated colour space 19 (CIEJab), which is not allowed in PDF/A.    

Rule: 2_6.2.8.3-5
    Requirement: The bit-depth of the JPEG2000 data shall have a value in the range 1 to 38. All colour channels in the JPEG2000 data shall have the same bit-depth. 
    Error details: JPEG2000 image has bit-depth parameters outside of the permitted rante 1 to 38.    

Rule: 2_6.2.9-1
    Requirement: A form XObject dictionary shall not contain any of the following: - the OPI key; - the Subtype2 key with a value of PS; - the PS key. 
    Error details: The form XObject dictionary contains a PS key, or a Subtype2 key with value PS, or an OPI key.      

Rule: 2_6.2.9-2
    Requirement: A conforming file shall not contain any reference XObjects. 
    Error details: The document contains a reference XObject (Ref key in the form XObject dictionary).    

Rule: 2_6.2.9-3
    Requirement: A conforming file shall not contain any PostScript XObjects. 
    Error details: The document contains a PostScript XObject.    

Rule: 2_6.2.10-1
    Requirement: Only blend modes that are specified in ISO 32000-1:2008 shall be used for the value of the BM key in an extended graphic state dictionary. 
    Error details: The document uses the blend mode not defined in ISO 32000-1:2008.      

Rule: 2_6.2.10-2
    Requirement: If the document does not contain a PDF/A OutputIntent, then all Page objects that contain transparency shall include the Group key, and the attribute dictionary that forms the value of that Group key shall include a CS entry whose value shall be used as the default blending colour space. 
    Error details: The page contains transparent objects with no blending colour space defined.   PDF transparency (as described in ISO 32000-1:2008, Clause 11) may be used in a PDF/A-2 and PDF/A-3 file. This requirement ensures that there is always an explicitly defined transparency blending space specified for any content which has associated transparency.      

Rule: 2_6.2.11.2-1
    Requirement: All fonts and font programs used in a conforming file, regardless of rendering mode usage, shall conform to the provisions in ISO 32000-1:2008, 9.6 and 9.7, as well as to the font specifications referenced by these provisions.    >* Type - name - (Required) The type of PDF object that this dictionary describes; must be Font for a font dictionary* 
    Error details: A Font dictionary has missing or invalid Type entry    

Rule: 2_6.2.11.2-2
    Requirement: All fonts and font programs used in a conforming file, regardless of rendering mode usage, shall conform to the provisions in ISO 32000-1:2008, 9.6 and 9.7, as well as to the font specifications referenced by these provisions.   >Subtype - name - (Required) The type of font; must be "Type1" for Type 1 fonts, "MMType1" for multiple master fonts, "TrueType" for TrueType fonts "Type3" for Type 3 fonts, "Type0" for Type 0 fonts and "CIDFontType0" or "CIDFontType2" for CID fonts*  
    Error details: A Font dictionary has missing or invalid Subtype entry.      

Rule: 2_6.2.11.2-3
    Requirement: All fonts and font programs used in a conforming file, regardless of rendering mode usage, shall conform to the provisions in ISO 32000-1:2008, 9.6 and 9.7, as well as to the font specifications referenced by these provisions.    >* BaseFont - name - (Required) The PostScript name of the font*  
    Error details: A BaseFont entry is missing or has invalid type    

Rule: 2_6.2.11.2-4
    Requirement: All fonts and font programs used in a conforming file, regardless of rendering mode usage, shall conform to the provisions in ISO 32000-1:2008, 9.6 and 9.7, as well as to the font specifications referenced by these provisions.    >* FirstChar - integer - (Required except for the standard 14 fonts) The first character code defined in the font's Widths array*  
    Error details: A non-standard simple font dictionary has missing or invalid FirstChar entry    

Rule: 2_6.2.11.2-5
    Requirement: All fonts and font programs used in a conforming file, regardless of rendering mode usage, shall conform to the provisions in ISO 32000-1:2008, 9.6 and 9.7, as well as to the font specifications referenced by these provisions.    >* FirstChar - integer - (Required except for the standard 14 fonts) The first character code defined in the font's Widths array* 
    Error details: A non-standard simple font dictionary has missing or invalid LastChar entry    

Rule: 2_6.2.11.2-6
    Requirement: All fonts and font programs used in a conforming file, regardless of rendering mode usage, shall conform to the provisions in ISO 32000-1:2008, 9.6 and 9.7, as well as to the font specifications referenced by these provisions.    >* Widths - array - (Required except for the standard 14 fonts; indirect reference preferred) An array of (LastChar âˆ’ FirstChar + 1) widths* 
    Error details: Font Widths array is missing or has invalid size.    

Rule: 2_6.2.11.3-1
    Requirement: For any given composite (Type 0) font within a conforming file, the CIDSystemInfo entry in its CIDFont dictionary and its Encoding dictionary shall have the following relationship. If the Encoding key in the Type 0 font dictionary is Identity-H or Identity-V, any values of Registry, Ordering, and Supplement may be used in the CIDSystemInfo entry of the CIDFont. Otherwise, the corresponding Registry and Ordering strings in both CIDSystemInfo dictionaries shall be identical, and the value of the Supplement key in the CIDSystemInfo dictionary of the CIDFont shall be greater than or equal to the Supplement key in the CIDSystemInfo dictionary of the CMap.  
    Error details: CiDSystemInfo entries the CIDFont and CMap dictionaries of a Type 0 font are not compatible.    

Rule: 2_6.2.11.3-2
    Requirement: ISO 32000-1:2008, 9.7.4, Table 117 requires that all embedded Type 2 CIDFonts in the CIDFont dictionary shall contain a CIDToGIDMap entry that shall be a stream mapping from CIDs to glyph indices or the name Identity, as described in ISO 32000-1:2008, 9.7.4, Table 117.  
    Error details: A Type 2 CIDFont dictionary has missing or invalid CIDToGIDMap entry.      

Rule: 2_6.2.11.3-3
    Requirement: All CMaps used within a PDF/A-2 file, except those listed in ISO 32000-1:2008, 9.7.5.2, Table 118, shall be embedded in that file as described in ISO 32000-1:2008, 9.7.5.  
    Error details: A non-standard CMap is not embedded      

Rule: 2_6.2.11.3-4
    Requirement: For those CMaps that are embedded, the integer value of the WMode entry in the CMap dictionary shall be identical to the WMode value in the embedded CMap stream. 
    Error details: WMode entry in the embedded CMap and in the CMap dictionary are not identical.    

Rule: 2_6.2.11.4-1
    Requirement: The font programs for all fonts used for rendering within a conforming file shall be embedded within that file, as defined in ISO 32000-1:2008, 9.9. 
    Error details: The font program is not embedded      

Rule: 2_6.2.11.4-2
    Requirement: Embedded fonts shall define all glyphs referenced for rendering within the conforming file. A font referenced for use solely in rendering mode 3 is therefore not rendered and is thus exempt from the embedding requirement.  
    Error details: Not all glyphs referenced for rendering are present in the embedded font program.    

Rule: 2_6.2.11.4-3
    Requirement: If the FontDescriptor dictionary of an embedded Type 1 font contains a CharSet string, then it shall list the character names of all glyphs present in the font program, regardless of whether a glyph in the font is referenced or used by the PDF or not. 
    Error details: A CharSet entry in the Descriptor dictionary of a Type1 font incorrectly lists glyphs present in the font program.    

Rule: 2_6.2.11.4-4
    Requirement: If the FontDescriptor dictionary of an embedded CID font contains a CIDSet stream, then it shall identify all CIDs which are present in the font program, regardless of whether a CID in the font is referenced or used by the PDF or not. 
    Error details: A CID Font subset does not define CIDSet entry in its Descriptor dictionary    

Rule: 2_6.2.11.5-1
    Requirement: For every font embedded in a conforming file and used for rendering, the glyph width information in the font dictionary and in the embedded  font program shall be consistent. 
    Error details: Glyph width information in the embedded font program is not consistent with the Widths entry of the font dictionary.    

Rule: 2_6.2.11.6-1
    Requirement: For all non-symbolic TrueType fonts used for rendering, the embedded TrueType font program shall contain one or several non-symbolic cmap entries such that all necessary glyph lookups can be carried out. 
    Error details: The embedded font program for a non-symbolic TrueType font does not contain any cmap subtables.    

Rule: 2_6.2.11.6-2
    Requirement: No non-symbolic TrueType font shall define a Differences array unless all of the glyph names in the Differences array are listed in the Adobe Glyph List and the embedded font program contains at least the Microsoft Unicode (3,1 - Platform ID=3, Encoding ID=1) encoding in the 'cmap' table. 
    Error details: A non-symbolic TrueType font has encoding different from MacRomanEncoding or WinAnsiEncoding, or the glyphs in the Differences array can not be mapped to the embedded font glyphs via the Adobe Glyph List.    

Rule: 2_6.2.11.6-3
    Requirement: Symbolic TrueType fonts shall not contain an Encoding entry in the font dictionary. 
    Error details: A symbolic TrueType font specifies an Encoding entry in its dictionary.    

Rule: 2_6.2.11.6-4
    Requirement: Symbolic TrueType fonts shall not contain an Encoding entry in the font dictionary, and the 'cmap' table in the embedded font program shall either contain exactly one encoding or it shall contain, at least, the Microsoft Symbol (3,0 - Platform ID=3, Encoding ID=0) encoding.  
    Error details: The embedded font program for a symbolic TrueType font contains more than one cmap subtable.    

Rule: 2_6.2.11.7-1
    Requirement: The Unicode values specified in the ToUnicode CMap shall all be greater than zero (0), but not equal to either U+FEFF or U+FFFE. 
    Error details: The font does not define Unicode character map or some glyphs have invalid Unicode value.   The font dictionary of all fonts, regardless of their rendering mode usage, shall include a ToUnicode entry whose value is a CMap stream object that maps character codes for at least all referenced glyphs to Unicode values, as described in ISO 32000-1:2008, 9.10.3, unless the font meets at least one of the following four conditions: - fonts that use the predefined encodings MacRomanEncoding, MacExpertEncoding or WinAnsiEncoding; - Type 1 and Type 3 fonts where the glyph names of the glyphs referenced are all contained in the Adobe Glyph List or the set of named characters in the Symbol font, as defined in ISO 32000-1:2008, Annex D; - Type 0 fonts whose descendant CIDFont uses the Adobe-GB1, Adobe-CNS1, Adobe-Japan1 or Adobe-Korea1 character collections. - Non-symbolic TrueType fonts.   This requirement ensures that the values in the ToUnicode CMap will be useful values and not simply placeholders.    

Rule: 2_6.2.11.8-1
    Requirement: A PDF/A-2 compliant document shall not contain a reference to the .notdef glyph from any of the text showing operators, regardless of text rendering mode, in any content stream. 
    Error details: The document contains a reference to the .notdef glyph.    

Rule: 2_6.3.1-1
    Requirement: Annotation types not defined in ISO 32000-1 shall not be permitted. Additionally, the 3D, Sound, Screen and Movie types shall not be permitted. 
    Error details: Unknown or not permitted annotation type.      

Rule: 2_6.3.2-1
    Requirement: Except for annotation dictionaries whose Subtype value is Popup, all annotation dictionaries shall contain the F key. 
    Error details: A dictionary of a non-Popup annotation does not contain F key.    

Rule: 2_6.3.2-2
    Requirement: If present, the F key's Print flag bit shall be set to 1 and its Hidden, Invisible, ToggleNoView, and NoView flag bits shall be set to 0. 
    Error details: One of the annotation flags Hidden, Invisible, ToggleNoView, or NoView is set to 1, or the Print flag is set to 0.    

Rule: 2_6.3.2-3
    Requirement: Text annotations should set the NoZoom and NoRotate flag bits of the F key to 1.  
    Error details: Text annotation has one of the flags NoZoom or NoRotate set to 0.    

Rule: 2_6.3.3-1
    Requirement: Every annotation (including those whose Subtype value is Widget, as used for form fields), except for the two cases listed below, shall have at least one appearance dictionary: annotations where the value of the Rect key consists of an array where value 1 is equal to value 3 and value 2 is equal to value 4;  annotations whose Subtype value is Popup or Link.  
    Error details: An annotation does not contain an appearance dictionary.    

Rule: 2_6.3.3-2
    Requirement: For all annotation dictionaries containing an AP key, the appearance dictionary that it defines as its value shall contain only the N key. If an annotation dictionary's Subtype key has a value of Widget and its FT key has a
    Error details: Annotation's appearance dictionary contains entries other than N or the N entry has an invalid type.    

Rule: 2_6.4.1-1
    Requirement: A Widget annotation dictionary or Field dictionary shall not contain the A or AA keys. 
    Error details: A Widget annotation contains either A or AA entry.    

Rule: 2_6.4.1-2
    Requirement: A Widget annotation dictionary or Field dictionary shall not contain the A or AA keys. 
    Error details: A Form field dictionary contains the AA entry.    

Rule: 2_6.4.1-3
    Requirement: The NeedAppearances flag of the interactive form dictionary shall either not be present or shall be false. 
    Error details: The interactive form dictionary contains the NeedAppearances flag with value true.    

Rule: 2_6.4.2-1
    Requirement: The document's interactive form dictionary that forms the value of the AcroForm key in the document's Catalog of a PDF/A-2 file, if present, shall not contain the XFA key. 
    Error details: The interactive form dictionary contains the XFA key.    

Rule: 2_6.4.2-2
    Requirement: A document's Catalog shall not contain the NeedsRendering key. 
    Error details: A document's Catalog contains NeedsRendering flag set to true.    

Rule: 2_6.4.3-1
    Requirement: When computing the digest for the file, it shall be computed over the entire file, including the signature dictionary but excluding the PDF Signature itself. 
    Error details: ByteRanbe array of the digital signature does not cover the entire file (excluding the PDF Signature itself).   As permitted by ISO 32000-1:2008, 12.8.1, a PDF/A-2 or PDF/A-3 conforming file may contain document, certifying or user rights signatures. Such signatures shall be specified in the PDF through the use of signature fields in accordance with ISO 32000-1:2008, 12.7.4.5.   This makes normative a recommendation in ISO 32000-1:2008, 12.8.1. By restricting the ByteRange entry this way, it ensures that there are no bytes in the PDF that are not covered by the digest, other than the PDF signature itself.      

Rule: 2_6.4.3-2
    Requirement: The PDF Signature (a DER-encoded PKCS7 binary data object) shall be placed into the Contents entry of the signature dictionary. The PKCS7 object shall conform to the PKCS7 specification in RFC 2315. At minimum, it shall include the signer's X.509 signing certificate and there shall only be a single signer (e.g. a single "SignerInfo" structure) in the PDF Signature.  
    Error details: The DER-encoded PKCS7 binary data object representing a PDF Signature does not conform to PDF/A-2 requirements      

Rule: 2_6.5.1-1
    Requirement: The Launch, Sound, Movie, ResetForm, ImportData, Hide, SetOCGState, Rendition, Trans, GoTo3DView and JavaScript actions shall not be permitted. Additionally, the deprecated set-state and noop actions shall not be permitted.  
    Error details: Unknown or not permitted action type.      

Rule: 2_6.5.1-2
    Requirement: Named actions other than NextPage, PrevPage, FirstPage, and LastPage shall not be permitted. 
    Error details: Unknown or not permitted named action.      

Rule: 2_6.5.2-1
    Requirement: The document's Catalog shall not include an AA entry for an additional-actions dictionary. 
    Error details: The document catalog dictionary contains an additional-actions dictionary (AA entry)    

Rule: 2_6.5.2-2
    Requirement: The Page dictionary shall not include an AA entry for an additional-actions dictionary. 
    Error details: The Page dictionary contains an additional-actions dictionary (AA entry).    

Rule: 2_6.6.2.1-1
    Requirement: The Catalog dictionary of a conforming file shall contain the Metadata key whose value is a metadata stream as defined in ISO 32000-1:2008, 14.3.2. 
    Error details: The document catalog dictionary doesn't contain metadata key.      

Rule: 2_6.6.2.1-2
    Requirement: The bytes attribute shall not be used in the header of an XMP packet. 
    Error details: The XMP Package contains bytes attribute.    

Rule: 2_6.6.2.1-3
    Requirement: The encoding attribute shall not be used in the header of an XMP packet. 
    Error details: The XMP Package contains encoding attribute.    

Rule: 2_6.6.2.1-4
    Requirement: All metadata streams present in the PDF shall conform to the XMP Specification. All content of all XMP packets shall be well-formed, as defined by Extensible Markup Language (XML) 1.0 (Third Edition), 2.1, and the RDF/XML Syntax Specification (Revised). 
    Error details: A metadata stream is serialized icorrectly and can not be parsed.    

Rule: 2_6.6.2.3-1
    Requirement: Extension schemas shall be specified using the PDF/A extension schema container schema defined in 2_6.6.2.3.3. All fields described in each of the tables in 2_6.6.2.3.3 shall be present in any extension schema container schema.  
    Error details: An extension schema object contains fields not defined by the specification.    

Rule: 2_6.6.2.3-2
    Requirement: The extension schema container schema uses the namespace URI "http://www.aiim.org/pdfa/ns/extension/". The required schema namespace prefix is pdfaExtension. pdfaExtension:schemas - Bag Schema - Description of extension schemas*  
    Error details: Invalid syntax of the extension schema container.    

Rule: 2_6.6.2.3-3
    Requirement: The Schema type is an XMP structure containing the definition of an extension schema. The field namespace URI is "http://www.aiim.org/pdfa/ns/schema". The required field namespace prefix is pdfaSchema. The Schema type includes the following fields: pdfaSchema:schema (Text), pdfaSchema:namespaceURI (URI), pdfaSchema:prefix (Text), pdfaSchema:property (Seq Property), pdfaSchema:valueType (Seq ValueType). 
    Error details: Invalid Extension Schema definition.    

Rule: 2_6.6.2.3-4
    Requirement: The Property type defined is an XMP structure containing the definition of a schema property. The field namespace URI is "http://www.aiim.org/pdfa/ns/property". The required field namespace prefix is pdfaProperty. The Property type includes the following fields: pdfaProperty:name (Text), pdfaProperty:valueType (Open Choice of Text), pdfaProperty:category (Closed Choice of Text), pdfaProperty:description (Text).  
    Error details: Invalid extension schema Property type definition    

Rule: 2_6.6.2.3-5
    Requirement: The ValueType type is an XMP structure containing the definition of all property value types used by embedded extension schemas that are not defined in the XMP Specification. The field namespace URI is "http://www.aiim.org/pdfa/ns/type". The required field namespace prefix is pdfaType. The ValueType type includes the following fields: pdfaType:type (Text), pdfaType:namespaceURI (URI), pdfaType:prefix (Text), pdfaType:description (Text), pdfaType:field (Seq Field). 
    Error details: Invalid extension schema ValueType type definition.    

Rule: 2_6.6.2.3-6
    Requirement: The Field type defined in Table 6 is an XMP structure containing the definition of a property value type field. The field namespace URI is "http://www.aiim.org/pdfa/ns/field". The required field namespace prefix is pdfaField. The Field type contains the following fields:
    Error details: Invalid extension schema Field type definition    

Rule: 2_6.6.2.3-7
    Requirement: All properties specified in XMP form shall use either the predefined schemas defined in the XMP Specification, ISO 19005-1 or this part of ISO 19005, or any extension schemas that comply with 2_6.6.2.3.2.  
    Error details: An XMP property is either not not pre-defined, is not defined in any extension schema, or has invalid type.    

Rule: 2_6.6.4-1
    Requirement: The PDF/A version and conformance level of a file shall be specified using the PDF/A Identification extension schema. 
    Error details: The document metadata stream doesn't contains PDF/A Identification Schema.    

Rule: 2_6.6.4-2
    Requirement: The value of pdfaid:part shall be the part number of ISO 19005 to which the file conforms. 
    Error details: The "part" property of the PDF/A Identification Schema is does not match the PDF/A profile part number.    

Rule: 2_6.6.4-3
    Requirement: A Level A conforming file shall specify the value of pdfaid:conformance as A. A Level B conforming file shall specify the value of pdfaid:conformance as B. A Level U conforming file shall specify the value of pdfaid:conformance as U.  
    Error details: The "conformance" property of the PDF/A Identification Schema does not confirm the PDF/A profile level.    

Rule: 2_6.6.4-4
    Requirement: The PDF/A Identification schema defined in Table 8 uses the namespace URI "http://www.aiim.org/pdfa/ns/id/". The required schema namespace prefix is pdfaid. It contains the following fields: pdfaid:part (Open Choice of Integer), pdfaid:amd (Open Choice of Text), pdfaid:corr (Open Choice of Text), pdfaid:conformance (Open Choice of Text).  
    Error details: A property of the PDF/A Identification Schema has an invalid namespace prefix.    

Rule: 2_6.7.2-1
    Requirement: The document catalog dictionary shall include a MarkInfo dictionary containing an entry, Marked, whose value shall be true.  
    Error details: /Marked entry of the MarkInfo dictionary is not present in the document catalog or is set to false.      

Rule: 2_6.7.3-1
    Requirement: The logical structure of the conforming file shall be described by a structure hierarchy rooted in the StructTreeRoot entry of the document's Catalog dictionary, as described in ISO 32000-1:2008, 14.7.  
    Error details: StructTreeRoot entry is not present in the document catalog      

Rule: 2_6.7.3-2
    Requirement: All non-standard structure types shall be mapped to the nearest functionally equivalent standard type, as defined in ISO 32000-1:2008, 14.8.4, in the role map dictionary of the structure tree root.  
    Error details: Non-standard structure type is not mapped to a standard type.      

Rule: 2_6.8-1
    Requirement: The MIME type of an embedded file, or a subset of a file, shall be specified using the Subtype key of the file specification dictionary. If the MIME type is not known, the "application/octet-stream" shall be used. 
    Error details: An embedded file dictionary doe snot contain the MIME type information (Subtype entry).    

Rule: 2_6.8-2
    Requirement: The file specification dictionary for an embedded file shall contain the F and UF keys. 
    Error details: The file specification dictionary for an embedded file does not contain either F or EF key.    

Rule: 2_6.8-3
    Requirement: In order to enable identification of the relationship between the file specification dictionary and the content that is referring to it, a new (required) key has been defined and its presence (in the dictionary) is required. 
    Error details: The file specification dictionary for an embedded file does not contain the AFRelationship key.    

Rule: 2_6.9-1
    Requirement: Each optional content configuration dictionary that forms the value of the D key, or that is an element in the array that forms the value of the Configs key in the OCProperties dictionary, shall contain the Name key. 
    Error details: Missing or empty Name entry of the optional content configuration dictionary.    

Rule: 2_6.9-2
    Requirement: Each optional content configuration dictionary shall contain the Name key, whose value shall be unique amongst all optional content configuration dictionaries within the PDF/A-2 file. 
    Error details: Optional content configuration dictionary has duplicated name.    

Rule: 2_6.9-3
    Requirement: If an optional content configuration dictionary contains the Order key, the array which is the value of this Order key shall contain references to all OCGs in the conforming file. 
    Error details: Not all optional content groups are present in the Order entry of the optional content configuration dictionary.    

Rule: 2_6.9-4
    Requirement: The AS key shall not appear in any optional content configuration dictionary. 
    Error details: AS key is present in the optional content configuration dictionary.    

Rule: 2_6.10-1
    Requirement: There shall be no AlternatePresentations entry in the document's name dictionary. 
    Error details: The document's name dictionary contains the AlternatePresentations entry.    

Rule: 2_6.10-2
    Requirement: There shall be no PresSteps entry in any Page dictionary. 
    Error details: A Page dictionary contains the PresSteps entry.    

Rule: 2_6.11-1
    Requirement: The document catalog shall not contain the Requirements key. 
    Error details: The document catalog contains the Requirements key.   
